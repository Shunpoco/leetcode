package twosum

import (
	"reflect"
	"testing"
)

func TestTwoSum(t *testing.T) {
	var testCases = []struct {
		numbers []int
		target  int
		want    []int
	}{
		{
			numbers: []int{2, 7, 11, 15},
			target:  9,
			want:    []int{1, 2},
		},
		{
			numbers: []int{2, 3, 4},
			target:  6,
			want:    []int{1, 3},
		},
		{
			numbers: []int{-1, 0},
			target:  -1,
			want:    []int{1, 2},
		},
		{
			numbers: []int{5, 25, 75},
			target:  100,
			want:    []int{2, 3},
		},
		{
			numbers: []int{12, 13, 23, 28, 43, 44, 59, 60, 61, 68, 70, 86, 88, 92, 124, 125, 136, 168, 173, 173, 180, 199, 212, 221, 227, 230, 277, 282, 306, 314, 316, 321, 325, 328, 336, 337, 363, 365, 368, 370, 370, 371, 375, 384, 387, 394, 400, 404, 414, 422, 422, 427, 430, 435, 457, 493, 506, 527, 531, 538, 541, 546, 568, 583, 585, 587, 650, 652, 677, 691, 730, 737, 740, 751, 755, 764, 778, 783, 785, 789, 794, 803, 809, 815, 847, 858, 863, 863, 874, 887, 896, 916, 920, 926, 927, 930, 933, 957, 981, 997},
			target:  542,
			want:    []int{24, 32},
		},
		{
			numbers: []int{12, 83, 104, 129, 140, 184, 199, 300, 306, 312, 321, 325, 341, 344, 349, 356, 370, 405, 423, 444, 446, 465, 471, 491, 500, 506, 508, 530, 539, 543, 569, 591, 606, 607, 612, 614, 623, 627, 645, 662, 670, 685, 689, 726, 731, 737, 744, 747, 764, 773, 778, 787, 802, 805, 811, 819, 829, 841, 879, 905, 918, 918, 929, 955, 997},
			target:  789,
			want:    []int{3, 42},
		},
	}

	for _, tc := range testCases {
		if r := twoSum(tc.numbers, tc.target); !reflect.DeepEqual(r, tc.want) {
			t.Errorf("twoSum(%v, %d) == %v, expected %v", tc.numbers, tc.target, r, tc.want)
		}
	}
}
